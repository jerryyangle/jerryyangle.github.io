<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>接口和抽象类的区别</title>
      <link href="/2022/06/16/%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2022/06/16/%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h3 id="设计层面的区别"><a href="#设计层面的区别" class="headerlink" title="设计层面的区别"></a>设计层面的区别</h3><p>1、抽象类是对一种事物的抽象、即对类抽象，而接口是对行为的抽象。抽象类是对整个类整体进行抽象，包括属性、行为，但是接口却是对类局部（行为）进行抽象。</p><p>2、设计层面不同，抽象类作为很多子类的父类，它是一种模板式设计。而接口是一种行为规范，它是一种辐射式设计。</p><table><thead><tr><th align="center">参数</th><th align="center">抽象类</th><th align="center">接口</th></tr></thead><tbody><tr><td align="center">默认的方法实现</td><td align="center">可以有默认的方法实现</td><td align="center">接口完全是抽象的。不存在方法的实现</td></tr><tr><td align="center">实现</td><td align="center">子类使用extends关键字来继承抽象类。如果子类不是抽象类的话，需要提供抽象类中所有声明的方法和实现。</td><td align="center">子类使用关键字implements来实现接口。需要提供接口中所有声明的方法的实现。</td></tr><tr><td align="center">构造器</td><td align="center">抽象类可以有构造器</td><td align="center">接口不能有构造器</td></tr><tr><td align="center">访问修饰符</td><td align="center">抽象方法可以有public、protected和default这些修饰符</td><td align="center">接口方法默认修饰符是public。可以不使用其他修饰符。</td></tr><tr><td align="center">main方法</td><td align="center">抽象方法可以有main方法并且可以运行</td><td align="center">接口没有main方法，不能运行</td></tr><tr><td align="center">多继承</td><td align="center">抽象方法可以继承一个类和实现多个接口</td><td align="center">接口可以继承一个或多个其他接口</td></tr><tr><td align="center">速度</td><td align="center">抽象类的速度比接口要快</td><td align="center">接口是稍微有点慢的，因为它需要时间去寻找在类中实现的方法。</td></tr><tr><td align="center">添加新方法</td><td align="center">如果你往抽象类中添加新的方法，你可以给他提供默认的实现。因此不需要改变你现在的代码。</td><td align="center">如果你往接口中添加方法，那么你必须改变实现该接口的类。</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>绿米工作周志</title>
      <link href="/2022/06/12/%E7%BB%BF%E7%B1%B3%E5%B7%A5%E4%BD%9C%E5%91%A8%E5%BF%97/"/>
      <url>/2022/06/12/%E7%BB%BF%E7%B1%B3%E5%B7%A5%E4%BD%9C%E5%91%A8%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>实习公司</th><th align="center">深圳市绿米联创科技有限公司</th></tr></thead><tbody><tr><td>时间日期</td><td align="center">工作内容</td></tr><tr><td>2022/1/10</td><td align="center">环境资源搭建 整合资源权限文档 商城完成度80%</td></tr><tr><td>2022/1/17</td><td align="center">1.已完成智装大师系统按钮所涉及到的接口的统计工作。<br>2.将相关的接口对应上数据库中的权限库中的表并将这些接口与库中有的功能权限一一对应，完成度80%。</td></tr><tr><td>2022/1/24</td><td align="center">已完成智装大狮权限资源的SQL配置，<br>并且已完成相关权限资源的基本测试工作，目前的简单测试并未发现有问题。</td></tr><tr><td>2022/2/21</td><td align="center">协助测试完成系统的权限模块的测试并将出现的问题进行修改。</td></tr><tr><td>2022/3/7</td><td align="center">完善权限配置的相关资源的关联</td></tr><tr><td>2022/3/14</td><td align="center">完成资源信息查询、新增、修改、批量删除的接口开发，并提供对外接口的功能。</td></tr><tr><td>2022/3/14</td><td align="center">处理好本地化连接VPN的开发的环境<br>熟悉和了解原有的代码。</td></tr><tr><td>2022/3/15</td><td align="center">在原有的基础上修改角色管理添加接口。</td></tr><tr><td>2022/3/16</td><td align="center">增加了角色列表分页查询功能的接口需求<br>修改原有代码的功能符合功能需求。</td></tr><tr><td>2022/3/17</td><td align="center">熟悉权限资源信息原有代码，并在原有代码基础上完善需要使用的权限资源信息接口</td></tr><tr><td>2022/3/18</td><td align="center">完成权限信息表的新增，修改，删除功能，提供了对外接口。</td></tr><tr><td>2022/3/28</td><td align="center">智装大狮客户管理异步导入的数据查询功能开发</td></tr><tr><td>2022/4/6</td><td align="center">智装大狮服务商日常运维答疑</td></tr><tr><td>2022/4/18</td><td align="center">1、智装大狮运维工作<br>2、订单管理反审核功能的接口开发</td></tr><tr><td>2022/4/25</td><td align="center">完成订单管理的反审核和导出功能<br>对接方案设计所需要的相关权限进行配置<br>智装大狮运维</td></tr><tr><td>2022/4/29</td><td align="center">根据测试反馈修改已完成的导出功能<br>添加查询订单需要的字段<br>根据方案设计需求开放相应的权限<br>根据测试反馈添加订单开单功能需要关联接口权限并同步到三个环境<br>完善短信验证码对外开放接口并提供文档<br>智装大狮运维</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>递归简单使用</title>
      <link href="/2022/06/12/%E9%80%92%E5%BD%92%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/06/12/%E9%80%92%E5%BD%92%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="1-“不死神兔”-问题（斐波那契数列）"><a href="#1-“不死神兔”-问题（斐波那契数列）" class="headerlink" title="1.“不死神兔” 问题（斐波那契数列）"></a>1.“不死神兔” 问题（斐波那契数列）</h3><p>有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问第二十个月的兔子对数为多少？</p><p>兔子对数：1 1 2 3 5 8 13 21 …从第三个数开始，后面两个数等于他前两个数之和：(n-1)+(n-2)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">rabbit</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (n == <span class="number">1</span> || n == <span class="number">2</span>)&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">       &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> rabbit(n-<span class="number">1</span>)+rabbit(n-<span class="number">2</span>);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-递归回溯解决迷宫问题"><a href="#2-递归回溯解决迷宫问题" class="headerlink" title="2.递归回溯解决迷宫问题"></a>2.递归回溯解决迷宫问题</h3><p>迷宫地图为一个二维数组：8*8，四周和中间某区域设有边界，设定走的路径规则为：下、右、上、左，在找出口过程中，如果碰到边界即此路不通，最终目的走到标记位。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Describe:</span></span><br><span class="line"><span class="comment"> * Author: yjl</span></span><br><span class="line"><span class="comment"> * Date: 2022/6/11 17:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Testgui</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1 1 1 1 1 1 1 1</span></span><br><span class="line"><span class="comment">     * 1 2 0 0 0 0 0 1</span></span><br><span class="line"><span class="comment">     * 1 2 2 2 2 0 0 1</span></span><br><span class="line"><span class="comment">     * 1 1 1 1 2 0 0 1</span></span><br><span class="line"><span class="comment">     * 1 0 0 0 2 0 0 1</span></span><br><span class="line"><span class="comment">     * 1 0 0 0 2 0 0 1</span></span><br><span class="line"><span class="comment">     * 1 0 0 0 2 2 2 1</span></span><br><span class="line"><span class="comment">     * 1 1 1 1 1 1 1 1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span>[][] map = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">8</span>][<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)&#123;</span><br><span class="line">            map[<span class="number">0</span>][i] = <span class="number">1</span>;</span><br><span class="line">            map[<span class="number">7</span>][i] = <span class="number">1</span>;</span><br><span class="line">            map[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            map[i][<span class="number">7</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        map[<span class="number">3</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">        map[<span class="number">3</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">        map[<span class="number">3</span>][<span class="number">3</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">8</span>;j++)&#123;</span><br><span class="line">                findWay(map,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">                System.out.print(map[i][j]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">findWay</span><span class="params">(<span class="type">int</span>[][] map,<span class="type">int</span> i,<span class="type">int</span> j)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (map[<span class="number">6</span>][<span class="number">6</span>]==<span class="number">2</span>)&#123;<span class="comment">//设置map[6][6]为终点</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (map[i][j]==<span class="number">0</span>)&#123;<span class="comment">//0表示没走过</span></span><br><span class="line">                map[i][j]=<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (findWay(map,i+<span class="number">1</span>,j))&#123;<span class="comment">//向下走</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (findWay(map,i,j+<span class="number">1</span>))&#123;<span class="comment">//向右走</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (findWay(map,i-<span class="number">1</span>,j))&#123;<span class="comment">//向上走</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (findWay(map,i,j-<span class="number">1</span>))&#123;<span class="comment">//向左走</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    map[i][j]=<span class="number">3</span>;<span class="comment">//如果走不通设置为3</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-二分查找"><a href="#3-二分查找" class="headerlink" title="3.二分查找"></a>3.二分查找</h3><p>有序数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Describe:</span></span><br><span class="line"><span class="comment"> * Author: yjl</span></span><br><span class="line"><span class="comment"> * Date: 2022/6/11 20:22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestdichotomySearch</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">17</span>&#125;;</span><br><span class="line">        System.out.println(dichotomySearch2(arr,<span class="number">1</span>,arr.length-<span class="number">1</span>,<span class="number">10</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不重复元素的二分查找</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">dichotomySearch</span><span class="params">(<span class="type">int</span>[] arr,<span class="type">int</span> left,<span class="type">int</span> right,<span class="type">int</span> findVal)</span>&#123;</span><br><span class="line">        <span class="comment">// 定义跳出递归的条件</span></span><br><span class="line">        <span class="keyword">if</span> (left &gt; right) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 定义二分点</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (left+right)/<span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">midVal</span> <span class="operator">=</span> arr[mid];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (midVal == findVal) &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (findVal &gt; midVal) &#123;</span><br><span class="line">            <span class="keyword">return</span> dichotomySearch(arr,mid+<span class="number">1</span>,right,findVal);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> dichotomySearch(arr,left,mid-<span class="number">1</span>,findVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//存在重复元素的查找</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;Integer&gt; <span class="title function_">dichotomySearch2</span><span class="params">(<span class="type">int</span>[] arr,<span class="type">int</span> left,<span class="type">int</span> right,<span class="type">int</span> findVal)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left&gt;right)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (left+right)/<span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">midVal</span> <span class="operator">=</span> arr[mid];</span><br><span class="line">        <span class="keyword">if</span> (findVal&gt;midVal)&#123;</span><br><span class="line">            <span class="keyword">return</span> dichotomySearch2(arr,mid+<span class="number">1</span>,right,findVal);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (findVal&lt;midVal)&#123;</span><br><span class="line">            <span class="keyword">return</span> dichotomySearch2(arr,left,mid-<span class="number">1</span>,findVal);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">ArrayList</span> <span class="variable">list</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">            <span class="comment">//向左</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (temp&lt;<span class="number">0</span> || arr[temp]!=findVal)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                list.add(temp);<span class="comment">//加入集合</span></span><br><span class="line">                temp = temp - <span class="number">1</span>;<span class="comment">//向左移动</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//向右</span></span><br><span class="line">            temp = temp+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (temp&gt;arr.length-<span class="number">1</span> || arr[temp]!=findVal)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                list.add(temp);</span><br><span class="line">                temp = temp + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>设计模式</title>
      <link href="/2022/06/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>/2022/06/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>可参考文章：<a href="http://c.biancheng.net/view/1338.html">单例模式（单例设计模式）详解</a></p><h3 id="1、设计模式分类"><a href="#1、设计模式分类" class="headerlink" title="1、设计模式分类"></a>1、设计模式分类</h3><p><strong>创建型模式</strong>：共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式</p><p><strong>结构型模式</strong>：共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。</p><p><strong>行为型模式</strong>：共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。</p><h3 id="2、设计模式六大原则"><a href="#2、设计模式六大原则" class="headerlink" title="2、设计模式六大原则"></a>2、设计模式六大原则</h3><p><strong>开放封闭原则</strong>：对拓展开放，对修改封闭。</p><p><strong>里氏替换原则</strong>：子类可拓展父类的功能，但不能改变父类的功能。子类可以实现父类的抽象方法，但不能覆盖父类的非抽象方法，子类中可以增加自己特有的方法。</p><p><strong>依赖倒转原则</strong>：面向接口编程，依赖于抽象不依赖于具体。</p><p><strong>接口隔离原则</strong>：降低依赖，降低耦合。</p><p><strong>迪米特法则（最少知道原则）</strong>：一个对象应当对其他对象有尽可能少了解，简称类间解耦。</p><p><strong>单一职能原则</strong>：一个方法只负责一件事。</p><h3 id="3、单例模式"><a href="#3、单例模式" class="headerlink" title="3、单例模式"></a>3、单例模式</h3><p>保证一个类只有一个实例，并且提供一个访问该全局的访问点</p><p><strong>懒汉式单例</strong>：该模式的特点是类加载时没有生成单例，只有当第一次调用getInstance方法才去创建这个单例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LazySingleton</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> <span class="type">LazySingleton</span> <span class="variable">instance</span> <span class="operator">=</span> <span class="literal">null</span>;    <span class="comment">//保证 instance 在所有线程中同步</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">LazySingleton</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;    <span class="comment">//private 避免类在外部被实例化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> LazySingleton <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//getInstance 方法前加同步</span></span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> <span class="title class_">LazySingleton</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>饿汉式单例</strong>：该模式的特点是类一旦加载就创建一个单例，保证调用getInstance方法之前单例已经存在了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HungrySingleton</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">HungrySingleton</span> <span class="variable">instance</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HungrySingleton</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">HungrySingleton</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HungrySingleton <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>记录删库经历</title>
      <link href="/2022/06/04/%E8%AE%B0%E5%BD%95%E5%88%A0%E5%BA%93%E7%BB%8F%E5%8E%86/"/>
      <url>/2022/06/04/%E8%AE%B0%E5%BD%95%E5%88%A0%E5%BA%93%E7%BB%8F%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<p>2022年的5月7号</p><p>今天早上，公司突然通知说公司有密接者，所有人都不能去上班，由于我离的比较近嘛，所以我去看了一下发现公司的电脑都被丢了出来在外面，唯独不见我的，然后后来才发现我的电脑已经被高级运维工程师忠海哥带回了家中，然后我就开始去找忠海哥拿回我的电脑，开始远程办公</p><p>今天我开始修复一些方案设计那边的权限SQL和一些菜单按钮权限，然后搞完了dev跟sit环境的我想导出uat环境的库到本地然后试一下脚本能否一次性执行成功，所以就开始操作。发现一次性不能执行成功报了几个error，然后我开始有点慌了，就想删库再导一遍试试，删完之后发现删错环境了，啊啊啊啊直接完蛋，呜呜呜想着怎么提桶了</p><p>然后我开始尝试怎么恢复，然后我把dev环境的数据导到sit了，看起来像是没什么问题，但是实际上sit的用户测的数据跟dev的肯定不一样，很快不久测试就来找我麻烦了，呜呜呜，然后我意识到事情有点大，我搞不定了，就开始找高级运维工程师郑号强看看能不能解决这个恢复一下数据，没想到他没有数据权限，然后我就只能找老大Ford了，唉最终删库的事情还是要被老大发现了，老大开通了权限然后看线上的同步数据到今天凌晨一点多的，根据这个时间节点然后导出数据之后恢复了原来的数据，慌死了，职业生涯刚刚开始就删库，看了可能被跑路的可能性有点大，但最终没有太大损失，浪费了一点大家的时间感觉很不好意思。</p><p>总结：凡事要涉及到数据库的增删改操作的一定要记录脚本，大改之前记得先备份数据库，定期备份数据，还有，执行的脚本注释一定要写清楚，不然不知道执行到了哪个环境哪个环境没有执行。</p><p>实习才知道的事：原来公司的团队开发是这个样子的，而且还有几个环境，分别是开发（dev），测试（sit），验收（uat），线上。还有所有东西必须上传到git方便自己不在的时候别人能拉到你的东西。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>后台启动进程命令</title>
      <link href="/2022/06/04/%E5%90%8E%E5%8F%B0%E5%90%AF%E5%8A%A8%E8%BF%9B%E7%A8%8B%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/06/04/%E5%90%8E%E5%8F%B0%E5%90%AF%E5%8A%A8%E8%BF%9B%E7%A8%8B%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>后台启动：nohup java -jar houserent.jar &gt;/usr/local/houserent.txt 2&gt;&amp;1 &amp;<br>查看进程：ps aux|grep houserent.jar</p><p>Java环境配置</p><p>export JAVA_HOME=/usr/local/java<br>export PATH=$PATH:$JAVA_HOME/bin</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>服务不注册上eureka</title>
      <link href="/2022/06/04/%E6%9C%8D%E5%8A%A1%E4%B8%8D%E6%B3%A8%E5%86%8C%E4%B8%8Aeureka/"/>
      <url>/2022/06/04/%E6%9C%8D%E5%8A%A1%E4%B8%8D%E6%B3%A8%E5%86%8C%E4%B8%8Aeureka/</url>
      
        <content type="html"><![CDATA[<p>在Environment - VM options中添加：</p><p>-Deureka.client.register-with-eureka=false</p><p>然后远程的服务调用的RemotexxxService中加上：</p><p>@FeignClient(name = “core-order-service”, configuration = OrderFeignConfiguration.class, fallbackFactory = RemoteOrderServiceFailBackFactory.class , path = “/order”,url = “localhost:8089”)</p><p>就可以不影响原有的服务调用。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>导出功能</title>
      <link href="/2022/06/04/%E5%AF%BC%E5%87%BA%E5%8A%9F%E8%83%BD/"/>
      <url>/2022/06/04/%E5%AF%BC%E5%87%BA%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="1-不用工具类，直接在方法体内写一个方法"><a href="#1-不用工具类，直接在方法体内写一个方法" class="headerlink" title="1.不用工具类，直接在方法体内写一个方法"></a>1.不用工具类，直接在方法体内写一个方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">exportOrderFile</span><span class="params">(List&lt;OrderExport&gt; exportList, HttpServletResponse response)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;订单导出&quot;</span> + System.currentTimeMillis();</span><br><span class="line">            <span class="comment">// 导出错误文件，并上传到cos</span></span><br><span class="line">            <span class="type">ExportParams</span> <span class="variable">exportParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExportParams</span>();</span><br><span class="line">            exportParams.setSheetName(fileName);</span><br><span class="line">            <span class="type">Workbook</span> <span class="variable">workbook</span> <span class="operator">=</span> ExcelExportUtil.exportExcel(exportParams, OrderExport.class, exportList);</span><br><span class="line">            <span class="keyword">if</span> (workbook != <span class="literal">null</span>)&#123;</span><br><span class="line">                response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> +</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">String</span>(fileName.getBytes(CharsetUtil.GBK), CharsetUtil.CHARSET_ISO_8859_1) + OrderConstants.EXCEL_FILE_SUFFIX);</span><br><span class="line">                response.setContentType(<span class="string">&quot;application/msexcel; charset=UTF-8&quot;</span>);</span><br><span class="line">                workbook.write(response.getOutputStream());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                log.warn(<span class="string">&quot;导出workbook对象(文件名:&#123;&#125;)为空!请检查&quot;</span>, fileName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            log.error(<span class="string">&quot;导出问题异常&quot;</span>);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BizException</span>(ApiResponseEnum.EXPORT_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>调用该方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//满足条件的一块导出</span></span><br><span class="line">        List&lt;OrderExportVO&gt; orderExportVOList = <span class="built_in">this</span>.baseMapper.listExportOrder(requestParam);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (OrderExportVO item : orderExportVOList)&#123;</span><br><span class="line">            item.setTypeName(Order.Type.getNameByValue(item.getType()));</span><br><span class="line">            item.setStatusName(Order.Status.getNameByValue(item.getStatus()));</span><br><span class="line">            <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> JSONUtil.parseArray(item.getExtendFeeDetail());</span><br><span class="line"></span><br><span class="line">            jsonArray.stream().filter(e -&gt; &#123;</span><br><span class="line">                <span class="type">JSONObject</span> <span class="variable">e1</span> <span class="operator">=</span> (JSONObject) e;</span><br><span class="line">                <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> String.valueOf(e1.get(<span class="string">&quot;code&quot;</span>));</span><br><span class="line">                <span class="keyword">if</span> (StrUtil.equals(code,<span class="string">&quot;SERVICE_FEE&quot;</span>) &amp;&amp; !StrUtil.isBlank(code))&#123;</span><br><span class="line">                    <span class="type">BigDecimal</span> <span class="variable">bd1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(String.valueOf(e1.get(<span class="string">&quot;amount&quot;</span>)));</span><br><span class="line">                    item.setServiceFee(bd1);<span class="comment">//服务费</span></span><br><span class="line">                    item.setExtendFee(item.getExtendFee().subtract(bd1));<span class="comment">//其他费用</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;OrderExport&gt; orderExportList = BeanUtil.copyToList(orderExportVOList, OrderExport.class);</span><br><span class="line">        exportOrderFile(orderExportList,response);</span><br></pre></td></tr></table></figure><h2 id="2-使用封装好的导出工具类ExcelUtil"><a href="#2-使用封装好的导出工具类ExcelUtil" class="headerlink" title="2.使用封装好的导出工具类ExcelUtil"></a>2.使用封装好的导出工具类ExcelUtil</h2><p>给出代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lumi.retail.base.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.ExcelExportUtil;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.ExcelImportUtil;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.entity.ExportParams;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.entity.ImportParams;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.entity.enmus.ExcelType;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.entity.params.ExcelExportEntity;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.entity.result.ExcelImportResult;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.handler.inter.IExcelDataModel;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.handler.inter.IExcelModel;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> com.lumi.retail.base.feign.ResultDto;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Sheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Workbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: excel导出工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: jackson</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2018-09-24 17:44</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExcelUtil</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">ServletOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ExcelUtil</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取总页数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title function_">getTotalPage</span><span class="params">(Long totalCount, Long pageSize)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (totalCount % pageSize == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> totalCount / pageSize;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (totalCount / pageSize) + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取导出表格参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ExportParams <span class="title function_">getExportParams</span><span class="params">(String title, String sheetName)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ExportParams</span>(title, sheetName, ExcelType.XSSF);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 适配集合+实体类方式导出</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">exportExcel</span><span class="params">(String fileName, String title, String sheetName, List&lt;?&gt; list,</span></span><br><span class="line"><span class="params">                                   Class&lt;?&gt; pojoClass,</span></span><br><span class="line"><span class="params">                                   HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="type">ExportParams</span> <span class="variable">exportParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExportParams</span>(title, sheetName);</span><br><span class="line">        exportParams.setType(ExcelType.XSSF); <span class="comment">//此处格式对应下文文件名后缀xlsx</span></span><br><span class="line">        <span class="type">Workbook</span> <span class="variable">workbook</span> <span class="operator">=</span> ExcelExportUtil.exportExcel(exportParams, pojoClass, list);</span><br><span class="line">        defaultExport(workbook, fileName, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 适配集合+实体类方式导出 专用于返回列表下还有统计总数、等</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Workbook <span class="title function_">exportExcel</span><span class="params">(String fileName, String title, String sheetName, List&lt;?&gt; list,</span></span><br><span class="line"><span class="params">                                   Class&lt;?&gt; pojoClass)</span> &#123;</span><br><span class="line">        <span class="type">ExportParams</span> <span class="variable">exportParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExportParams</span>(title, sheetName);</span><br><span class="line">        <span class="comment">//此处格式对应下文文件名后缀xlsx</span></span><br><span class="line">        exportParams.setType(ExcelType.XSSF);</span><br><span class="line">         <span class="keyword">return</span> ExcelExportUtil.exportExcel(exportParams, pojoClass, list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 适配动态列的导出方式</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> colList 动态列</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">exportExcel</span><span class="params">(String fileName, String title, String sheetName,</span></span><br><span class="line"><span class="params">                                   List&lt;ExcelExportEntity&gt; colList, List&lt;Map&lt;String, Object&gt;&gt; dataList,</span></span><br><span class="line"><span class="params">                                   HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="type">ExportParams</span> <span class="variable">exportParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExportParams</span>(title, sheetName);</span><br><span class="line">        exportParams.setType(ExcelType.XSSF); <span class="comment">// 此处格式对应下文文件名后缀xlsx</span></span><br><span class="line">        <span class="type">Workbook</span> <span class="variable">workbook</span> <span class="operator">=</span> ExcelExportUtil.exportExcel(exportParams, colList, dataList);</span><br><span class="line">        defaultExport(workbook, fileName, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">defaultExport</span><span class="params">(Workbook workbook, String fileName, HttpServletResponse response)</span> &#123;</span><br><span class="line">        defaultExport(workbook, fileName, response, <span class="string">&quot;application/msexcel; charset=UTF-8&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">defaultBigDataExport</span><span class="params">(Workbook workbook, String fileName, HttpServletResponse response)</span> &#123;</span><br><span class="line">        defaultExport(workbook, fileName, response, <span class="string">&quot;application/vnd.openxmlformats-officedocument.drawing+xml; charset=UTF-8&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">defaultExport</span><span class="params">(Workbook workbook, String fileName, HttpServletResponse response</span></span><br><span class="line"><span class="params">            , String contentType)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (workbook == <span class="literal">null</span>) &#123;</span><br><span class="line">            log.warn(<span class="string">&quot;导出workbook对象(文件名:&#123;&#125;)为空!请检查&quot;</span>, fileName);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> +</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">String</span>(fileName.getBytes(<span class="string">&quot;gbk&quot;</span>), <span class="string">&quot;iso8859-1&quot;</span>) + <span class="string">&quot;.xlsx&quot;</span>);</span><br><span class="line">            response.setContentType(contentType);</span><br><span class="line">            workbook.write(response.getOutputStream());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            log.error(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导入excel,此种方式支持校验,但是无校验的信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; List&lt;T&gt; <span class="title function_">importExcel</span><span class="params">(MultipartFile file, Integer titleRows, Integer headerRows, Integer sheetIndex,</span></span><br><span class="line"><span class="params">                                          Class&lt;T&gt; pojoClass)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ImportParams</span> <span class="variable">params</span> <span class="operator">=</span> getParams(file, titleRows, headerRows);</span><br><span class="line">        <span class="keyword">if</span> (params == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//要读取的 sheet数目</span></span><br><span class="line">        params.setSheetNum(<span class="number">1</span>);</span><br><span class="line">        params.setStartSheetIndex(sheetIndex);</span><br><span class="line">        <span class="keyword">return</span> ExcelImportUtil.importExcel(file.getInputStream(), pojoClass, params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导入excel,此种方式支持校验,也可获取校验的信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ExcelImportResult&lt;T&gt; <span class="title function_">importExcelMore</span><span class="params">(MultipartFile file, Integer titleRows</span></span><br><span class="line"><span class="params">            , Integer headerRows, Class&lt;T&gt; pojoClass)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ImportParams</span> <span class="variable">params</span> <span class="operator">=</span> getParams(file, titleRows, headerRows);</span><br><span class="line">        <span class="keyword">if</span> (params == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ExcelImportUtil.importExcelMore(file.getInputStream(), pojoClass, params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ImportParams <span class="title function_">getParams</span><span class="params">(MultipartFile file, Integer titleRows, Integer headerRows)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">ImportParams</span> <span class="variable">params</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImportParams</span>();</span><br><span class="line">        params.setTitleRows(titleRows);</span><br><span class="line">        params.setHeadRows(headerRows);</span><br><span class="line">        params.setNeedVerify(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 收集excel校验失败的信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title function_">collectExcelVerifyFailMsg</span><span class="params">(StringBuilder rowMsg,</span></span><br><span class="line"><span class="params">                                                    ExcelImportResult&lt;? extends BaseImportExcelDto&gt; importResult)</span> &#123;</span><br><span class="line">        List&lt;? <span class="keyword">extends</span> <span class="title class_">BaseImportExcelDto</span>&gt; failList = importResult.getFailList();</span><br><span class="line">        <span class="comment">//无错误信息返回 true</span></span><br><span class="line">        <span class="keyword">if</span> (failList == <span class="literal">null</span> || failList.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (BaseImportExcelDto baseImportExcelDto : failList) &#123;</span><br><span class="line">            rowMsg.append(<span class="string">&quot;[excel第&quot;</span> + (baseImportExcelDto.getRowNum() + <span class="number">1</span>) + <span class="string">&quot;行&quot;</span> +</span><br><span class="line">                    baseImportExcelDto.getErrorMsg() + <span class="string">&quot;]；&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导出模板</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 　文件名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath 　模板位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">exportTemplateExcel</span><span class="params">(String fileName, String filePath,</span></span><br><span class="line"><span class="params">                                           HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> ExcelUtil.class.getResourceAsStream(filePath);</span><br><span class="line">             <span class="type">XSSFWorkbook</span> <span class="variable">excelTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XSSFWorkbook</span>(inputStream);</span><br><span class="line">             <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream()) &#123;</span><br><span class="line">            response.reset();</span><br><span class="line">            response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;attachment;filename=&quot;</span> + <span class="keyword">new</span> <span class="title class_">String</span>(fileName.getBytes(<span class="string">&quot;gbk&quot;</span>), <span class="string">&quot;iso8859-1&quot;</span>)</span><br><span class="line">                            + <span class="string">&quot;.xlsx&quot;</span>);</span><br><span class="line">            response.setContentType(<span class="string">&quot;application/msexcel; charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 解决跨域问题</span></span><br><span class="line">            response.addHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line"></span><br><span class="line">            excelTemplate.write(outputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(e.getMessage(), e);</span><br><span class="line">            exportWarnMsg(response, <span class="string">&quot;导出模板失败!,路径：&quot;</span> + filePath);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过response输出响应信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">exportWarnMsg</span><span class="params">(HttpServletResponse response, String msg)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            response.setContentType(<span class="string">&quot;application/json;charset-utf-8&quot;</span>);</span><br><span class="line">            <span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">            outputStream.write(msg.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">            outputStream.flush();</span><br><span class="line">            outputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            log.error(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">exportDesign</span><span class="params">(String fileName, String title, String sheetName, List&lt;?&gt; list, Class&lt;?&gt; pojoClass,</span></span><br><span class="line"><span class="params">                                    HttpServletResponse response)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">ExportParams</span> <span class="variable">exportParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExportParams</span>(title, sheetName);</span><br><span class="line">        exportParams.setType(ExcelType.XSSF);</span><br><span class="line">        <span class="type">Workbook</span> <span class="variable">workbook</span> <span class="operator">=</span> ExcelExportUtil.exportExcel(exportParams, pojoClass, list);</span><br><span class="line">        <span class="type">Sheet</span> <span class="variable">sheet</span> <span class="operator">=</span> workbook.getSheet(sheetName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 隐藏最后一列</span></span><br><span class="line">        sheet.setColumnHidden(sheet.getRow(<span class="number">0</span>).getPhysicalNumberOfCells() - <span class="number">1</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        defaultExport(workbook, fileName, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导入excel,此种方式支持校验,也可获取校验的信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ExcelImportResult&lt;T&gt; <span class="title function_">importExcelWithVerifyMessages</span><span class="params">(</span></span><br><span class="line"><span class="params">            MultipartFile file, Integer titleRows, Integer headerRows, Class&lt;T&gt; pojoClass)</span></span><br><span class="line">            <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ImportParams</span> <span class="variable">params</span> <span class="operator">=</span> getParams(file, titleRows, headerRows);</span><br><span class="line">        <span class="keyword">if</span> (params == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ExcelImportUtil.importExcelMore(file.getInputStream(), pojoClass, params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">BaseImportExcelDto</span> <span class="keyword">implements</span> <span class="title class_">IExcelModel</span>, IExcelDataModel, Serializable &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 实现IExcelDataModel接口,返回行号</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> rowNum;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 实现IExcelModel接口,返回不符合的信息</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> String errorMsg;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getRowNum</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> rowNum;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRowNum</span><span class="params">(<span class="type">int</span> rowNum)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.rowNum = rowNum;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getErrorMsg</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> errorMsg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setErrorMsg</span><span class="params">(String errorMsg)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.errorMsg = errorMsg;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取excel导入返回给前端的结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ResultDto <span class="title function_">getExcelImportResult</span><span class="params">(Integer ignoreInsertCount,</span></span><br><span class="line"><span class="params">                                                 Integer repetInsertCount, StringBuilder rowMsg, StringBuilder totalCountMsg,</span></span><br><span class="line"><span class="params">                                                 ExcelImportResult importResult, <span class="type">int</span> extraFailCount, <span class="type">int</span> exportFailRollBack)</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">failList</span> <span class="operator">=</span> importResult.getFailList();</span><br><span class="line">        <span class="type">List</span> <span class="variable">successList</span> <span class="operator">=</span> importResult.getList();</span><br><span class="line">        totalCountMsg.append(<span class="string">&quot;[总读取数:&quot;</span>).append(failList.size() + successList.size() + extraFailCount).append(<span class="string">&quot;条],&quot;</span>);</span><br><span class="line">        totalCountMsg.append(<span class="string">&quot;[校验不通过:&quot;</span>).append(failList.size() + extraFailCount).append(<span class="string">&quot;条],&quot;</span>);</span><br><span class="line">        totalCountMsg.append(<span class="string">&quot;[识别成功:&quot;</span>).append(successList.size()).append(<span class="string">&quot;条],&quot;</span>);</span><br><span class="line">        totalCountMsg.append(<span class="string">&quot;[重复的单号数据:&quot;</span>).append(repetInsertCount).append(<span class="string">&quot;条],&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (ignoreInsertCount != <span class="literal">null</span> &amp;&amp; ignoreInsertCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            totalCountMsg.append(<span class="string">&quot;[新增信息:&quot;</span>).append(ignoreInsertCount).append(<span class="string">&quot;条]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((failList.size() + extraFailCount) == <span class="number">0</span> &amp;&amp; exportFailRollBack == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> getExecImportSuccessResultDto(rowMsg, totalCountMsg);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> getExecImportFailResultDto(rowMsg, totalCountMsg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ResultDto <span class="title function_">getExecImportFailResultDto</span><span class="params">(StringBuilder rowMsg, StringBuilder totalCountMsg)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (rowMsg.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            rowMsg = rowMsg.deleteCharAt(rowMsg.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Map&lt;String, Object&gt; returnResult = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">2</span>);</span><br><span class="line">        returnResult.put(<span class="string">&quot;rowMsg&quot;</span>, rowMsg.toString());</span><br><span class="line">        returnResult.put(<span class="string">&quot;totalCountMsg&quot;</span>, totalCountMsg.toString());</span><br><span class="line">        <span class="type">ResultDto</span> <span class="variable">resultDto</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ResultDto</span>();</span><br><span class="line">        resultDto.setData(returnResult);</span><br><span class="line">        resultDto.setMsg(<span class="string">&quot;导入失败！&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> resultDto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ResultDto <span class="title function_">getExecImportSuccessResultDto</span><span class="params">(StringBuilder rowMsg, StringBuilder totalCountMsg)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (rowMsg.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            rowMsg = rowMsg.deleteCharAt(rowMsg.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Map&lt;String, Object&gt; returnResult = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">2</span>);</span><br><span class="line">        returnResult.put(<span class="string">&quot;rowMsg&quot;</span>, rowMsg.toString());</span><br><span class="line">        returnResult.put(<span class="string">&quot;totalCountMsg&quot;</span>, totalCountMsg.toString());</span><br><span class="line">        <span class="type">ResultDto</span> <span class="variable">resultDto</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ResultDto</span>();</span><br><span class="line">        resultDto.setData(returnResult);</span><br><span class="line">        resultDto.setMsg(<span class="string">&quot;导入成功！&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> resultDto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>:创建一个sheet页的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span>: weiwu</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Date</span>: 2021-02-03</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title function_">createOneSheet</span><span class="params">(String sheetName, String title, Class&lt;?&gt; clazz, List&lt;?&gt; data)</span> &#123;</span><br><span class="line">        <span class="type">ExportParams</span> <span class="variable">exportParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExportParams</span>(title, sheetName, ExcelType.XSSF);</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;title&quot;</span>, exportParams);<span class="comment">//new ExportParams(&quot;title&quot;+i, &quot;sheetName&quot;+i, ExcelType.XSSF)</span></span><br><span class="line">        map.put(<span class="string">&quot;entity&quot;</span>, clazz);</span><br><span class="line">        map.put(<span class="string">&quot;data&quot;</span>, data);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>:生成多个sheet页的Workbook</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span>: weiwu</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Date</span>: 2021-02-03</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">exportExcelMultipleSheet</span><span class="params">(String fileName, List&lt;Map&lt;String, Object&gt;&gt; mapListList, HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="type">Workbook</span> <span class="variable">workbook</span> <span class="operator">=</span> ExcelExportUtil.exportExcel(mapListList, ExcelType.XSSF);</span><br><span class="line">        defaultExport(workbook, fileName, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">checkExtensions</span><span class="params">(String extension)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Lists.newArrayList(<span class="string">&quot;xls&quot;</span>, <span class="string">&quot;xlsx&quot;</span>, <span class="string">&quot;XLS&quot;</span>, <span class="string">&quot;XLSX&quot;</span>).contains(extension);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">streamExport</span><span class="params">(String fileName, CommonExportResultHandler resultHandler)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            init(fileName, resultHandler.getResponse());</span><br><span class="line">            resultHandler.getWriter().finish();</span><br><span class="line">            out.flush();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (out != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    out.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    log.error(<span class="string">&quot;An exception occurred in streamExport：&quot;</span>,e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(String fileName, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        out = response.getOutputStream();</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + <span class="keyword">new</span> <span class="title class_">String</span>((fileName).getBytes(<span class="string">&quot;gb2312&quot;</span>), StandardCharsets.ISO_8859_1) + <span class="string">&quot;.xlsx&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;multipart/form-data&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个工具类导入和导出的功能都有了</p><p>然后在bff层进行导出就很简单了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">exportOrder</span><span class="params">(RemoteOrderExportReq req, HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;订单导出&quot;</span> + System.currentTimeMillis();</span><br><span class="line">        Result&lt;List&lt;OrderExportVO&gt;&gt; result = remoteOrderService.exportList(req);</span><br><span class="line">        List&lt;BffOrderExport&gt; orderExportList = BeanUtil.copyToList(result.getData(), BffOrderExport.class);<span class="comment">//查出来的数据要跟导出的表所匹配</span></span><br><span class="line">        ExcelUtil.exportExcel(fileName,fileName,fileName,orderExportList,BffOrderExport.class,response);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>裁员日记</title>
      <link href="/2022/06/04/%E8%A3%81%E5%91%98%E6%97%A5%E8%AE%B0/"/>
      <url>/2022/06/04/%E8%A3%81%E5%91%98%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="2022年5月27日"><a href="#2022年5月27日" class="headerlink" title="2022年5月27日"></a>2022年5月27日</h4><p>今天是我被裁的第二天。非常后悔当初的选择，在当初秋招的时候我得到了好几个offer，其中有一个是柳州市农行的offer，还有一个广州8k的offer，但是我后面却选择来了深圳的这家垃圾公司，没有什么其他的原因，就是因为他给的比其他多一点，没见过钱的我就来了这个城市开始了漂泊的生活。由于当时也想跑，他也不急着签三方，所以我也不急着签三方，可是到了两个月这样，都没有找到好的，然后又没有想到要跟他签订三方才能有点保障所以就出现了后面现在的这种情况，因为面了几家之后都没过之后我就没面了，后面跟同事都混熟了就没想到要走，因为去年的校招生和我说他们也没有签三方还是一样转正了，所以我就没放在心上了。</p><p>有一说一这家公司的管理体系是真的差，而且一点也不完整，要是真的有好的我也想跑路了。</p><p>在2022年的5月23日下午，我被HRBP和上级领导Ford叫到了会议室，他们就问我来了多久，感觉怎么样，然后就开始说什么现在大环境不好，疫情的原因他们在上海的门店全部关了，我知道这样说就是想让我走嘛，我问了有没有赔偿我都干了这么久了，他们说没有，因为我没有签三方，也还没到签劳动合同的时候，所以一分钱都没得赔，让我自己走离职程序，他妈的就是不想赔，然后让我走什么的，然后后面就说看你想留到什么时候，因为后面不能提供岗位了也就是不能转正了，我就想着月底走了，早点离开这个垃圾公司。办理了调休假、离职手续什么的，我就和旁边的部门的研究生走了，因为他也是实习，而且也不确定有没有岗位提供，他觉得风险太大也走了。</p><p>唉，其实也挺感谢Ford和这家公司的，感谢Ford给我的机会，我能进入这家公司认识了这么多优秀的人，像浩浩和常江一个高级工程师一个去年校招生，在我这段时间很帮助我，在这期间也能学到了不少东西，带我的导师浩浩跟着他我学了挺多东西的，很感谢他。也是实习了我才知道原来团队开发和各个岗位协同工作原来是这样子的，软件测试工程师飞哥给我提了一些bug哈哈哈，对接前端提供前端数据，跟高级产品经理交流需求，等等。</p><p>自从来了深圳这半年来，经历了好多事情，经历了租房的，住在见不到光的小房间，经历了深圳全部停工停转7天居家，经历了抢菜，甚至经历了在酒店隔离了7天，也是拜这个公司所赐，后面就经历了裁员。。。我这二十多年来从来没有经历过这么多事情，唉，可能这就是生活吧。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL字段为空的筛选</title>
      <link href="/2022/06/04/SQL%E5%AD%97%E6%AE%B5%E4%B8%BA%E7%A9%BA%E7%9A%84%E7%AD%9B%E9%80%89/"/>
      <url>/2022/06/04/SQL%E5%AD%97%E6%AE%B5%E4%B8%BA%E7%A9%BA%E7%9A%84%E7%AD%9B%E9%80%89/</url>
      
        <content type="html"><![CDATA[<p>1、</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">List</span> <span class="variable">orderList</span> <span class="operator">=</span> orderService.lambdaQuery()</span><br><span class="line"> .eq(Order::getStatus,Order.Status.PENDING_PAYMENT.getValue())</span><br><span class="line"> .in(Order::getOrderId,orderIds).list().stream()</span><br><span class="line"> .filter(item -&gt; StrUtil.isBlank(item.getProjectId()))</span><br><span class="line"> .collect(Collectors.toList());</span><br></pre></td></tr></table></figure><p>2、筛选出查询出的list中某个字段为null或者为””的，然后过滤掉</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">success</span> <span class="operator">=</span> <span class="built_in">this</span>.lambdaUpdate()</span><br><span class="line">            .set(Order::getStatus, Order.Status.PENDING_AUDIT.getValue())</span><br><span class="line">            .set(Order::getVersion, order.getVersion() + <span class="number">1</span>)</span><br><span class="line">            .set(Order::getUpdateTime, now)</span><br><span class="line">            .set(Order::getAuditTime, now)</span><br><span class="line"></span><br><span class="line">            .eq(Order::getStatus, Order.Status.PENDING_PAYMENT.getValue())</span><br><span class="line">            .eq(Order::getOrderId, order.getOrderId())</span><br><span class="line">            .eq(Order::getVersion, order.getVersion())</span><br><span class="line">            .isNull(Order::getProjectId).or().eq(Order::getProjectId, <span class="string">&quot;&quot;</span>)</span><br><span class="line">            .update();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JSON数据的解析</title>
      <link href="/2022/06/04/JSON%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A7%A3%E6%9E%90/"/>
      <url>/2022/06/04/JSON%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="解析一条JSON数据"><a href="#解析一条JSON数据" class="headerlink" title="解析一条JSON数据"></a>解析一条JSON数据</h2><p>这条json数据是如下的</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SERVICE_FEE&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;服务费&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span> <span class="attr">&quot;amount&quot;</span><span class="punctuation">:</span> <span class="number">300</span><span class="punctuation">,</span> <span class="attr">&quot;itemNum&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;discount&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span> <span class="attr">&quot;required&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;allowDiscount&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;lowestDiscount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;originalAmount&quot;</span><span class="punctuation">:</span> <span class="number">300</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span><span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INSTALL_FEE&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;安装费&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span> <span class="attr">&quot;amount&quot;</span><span class="punctuation">:</span> <span class="number">800</span><span class="punctuation">,</span> <span class="attr">&quot;itemNum&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;discount&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span> <span class="attr">&quot;required&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;allowDiscount&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;lowestDiscount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;originalAmount&quot;</span><span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>可以看出这条数据是在一个数组里面的</p><p>解析过程</p><p>需求：我们只需要name是”服务费”的，然后取出所对于的amount</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> JSONUtil.parseArray(item.getExtendFeeDetail());</span><br><span class="line"><span class="comment">//这条是解析一个数组的，如果是直接解析的话还有其他的  例如：JSONObject</span></span><br></pre></td></tr></table></figure><p>然后就进行筛选过滤</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// java8的用法</span></span><br><span class="line">jsonArray.stream().filter(e -&gt; &#123;</span><br><span class="line">                <span class="type">JSONObject</span> <span class="variable">e1</span> <span class="operator">=</span> (JSONObject) e;</span><br><span class="line">                <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> String.valueOf(e1.get(<span class="string">&quot;code&quot;</span>));</span><br><span class="line">                <span class="keyword">if</span> (StrUtil.equals(code,<span class="string">&quot;SERVICE_FEE&quot;</span>) &amp;&amp; !StrUtil.isBlank(code))&#123;</span><br><span class="line">                    <span class="type">BigDecimal</span> <span class="variable">bd1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(String.valueOf(e1.get(<span class="string">&quot;amount&quot;</span>)));</span><br><span class="line">                    item.setServiceFee(bd1);<span class="comment">//服务费</span></span><br><span class="line">                    item.setExtendFee(item.getExtendFee().subtract(bd1));<span class="comment">//其他费用</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 普通的用法</span></span><br><span class="line"><span class="type">Object</span> <span class="variable">amount</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (Object o : jsonArray) &#123;</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">oo</span> <span class="operator">=</span> (JSONObject)o;</span><br><span class="line">            <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> String.valueOf(oo.get(<span class="string">&quot;code&quot;</span>));</span><br><span class="line">            <span class="keyword">if</span>(StrUtil.equals(code,<span class="string">&quot;SERVICE_FEE&quot;</span>))&#123;</span><br><span class="line">                amount =oo.get(<span class="string">&quot;amount&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(amount);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库导入失败</title>
      <link href="/2022/06/04/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%BC%E5%85%A5%E5%A4%B1%E8%B4%A5/"/>
      <url>/2022/06/04/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%BC%E5%85%A5%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="数据库导入失败"><a href="#数据库导入失败" class="headerlink" title="数据库导入失败"></a>数据库导入失败</h3><p>最近遇到的一个问题是直接导入会报错误，却一直不知道错误的原因</p><p>然后—就开始一段段的执行SQL文件</p><p>当执行到最后的插入文件时报了如下的错误：</p><p><strong>Got a packet bigger than ‘max_allowed_packet’ bytes</strong></p><p>原因分析：</p><p>SQL语句太长，以致超过了max_allowed_packet的大小</p><p>解决办法：</p><p>Windows环境下找到my.ini在Linux环境找到my.cnf</p><p>修改：</p><p>max_allowed_packet = 20M</p><p>然后重新执行SQL语句就可以了</p><p>我是在控制台进行修改</p><p>查看大小：show VARIABLES like ‘%max_allowed_packet%’;</p><p>然后进行设置：</p><p>set global max_allowed_packet = 210241024*10;</p><p>再重新登录MySQL</p><p>mysql -uroot -proot</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2022年5月9号深圳隔离记</title>
      <link href="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/"/>
      <url>/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>2022年5月11日笔</p><p>在2022年的5月7号的时候，公司突然发通知说今天不要来公司上班，原本今天是要去上班的补五一放假的班，所以周六要上班，但是今天早上起床就收到通知不要去公司，然后由于我电脑连不上远程我又离的比较近所以去看了一下，所有笔记本电脑被丢出来了，找不到我的后来发现在忠海哥那里，后面我去拿了回来，然后星期六居家办公了一天，星期天休息。星期一也就是5月9号，本来也是居家办公的，后面下午说部分人可以回去上班，然后我们的leader也就是Ford让我们部分人负责515版本智装大狮迭代的人员回去上班，之后就通知我回去上班了。</p><p>上班在24楼，我们两点钟上班，之后上班不久大概是四点多的时候，姚总就跟我们说，能走赶紧先走，然后我们意识到事情开始不对了之后，我马上拔掉电脑，到了公司楼下，但是发现已经走不了了，大门已经封了。</p><p><img src="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/IMG_20220509_155431.jpg"></p><p>然后我们马上到-1层，看看在地下停车库能不能走出去，没想到地下停车库也出不去了。但是在我们后面的过来到-1层却走出去了。我们回到了24楼，然后我们已经做好了住在公司的准备，当吃过公司的晚饭之后，我们就开始睡在了公司。直到大概一点多的时候姚总说收拾东西准备去酒店隔离。后面大白过来了，做核酸，做了采鼻子的核酸，好难受。。。</p><p><img src="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/IMG_20220509_194521.jpg"></p><p><img src="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/IMG_20220510_011322.jpg"></p><p>等到大概两点半之后，我们被通知大巴来接我们去酒店了。</p><p><img src="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/IMG_20220510_021122.jpg"></p><p><img src="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/IMG_20220510_021245.jpg"></p><p><img src="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/IMG_20220510_021448.jpg"></p><p><img src="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/IMG_20220510_022437.jpg"></p><p>大概到四点多的时候，我们来到了佳兆业可域酒店，来到了这个酒店之后，我住在了A512，酒店看起来特别豪华，一房一厅，卫生间干湿分离，从来没有住过这么好的酒店，还有大床，大窗，比我租的村子好上百倍</p><p><img src="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/IMG_20220511_152214.jpg"></p><p><img src="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/IMG_20220511_152245.jpg"></p><p><img src="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/IMG_20220511_152317.jpg"></p><p><img src="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/IMG_20220511_152326.jpg"></p><p>这个环境简直起飞，深圳南山果然有钱！豪气！就怕隔离完叫我付款哈哈哈那就GG了</p><p>听说要隔离10天。。。</p><p>这个是饭，三餐准点，营养均衡，有吃有喝</p><p><img src="/2022/06/04/2022%E5%B9%B45%E6%9C%889%E5%8F%B7%E6%B7%B1%E5%9C%B3%E9%9A%94%E7%A6%BB%E8%AE%B0/IMG_20220510_123545.jpg"></p><p>红码了，GG</p><p>真的要感谢国家和政府啊，能给我们提供这么好的隔离条件，我感到很自豪生活在中国。永远跟党走是没错的！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/06/04/hello-world/"/>
      <url>/2022/06/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
